# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zfc-enkJJYY5zm538wuP-XXdwW0qszMg
"""

import numpy as np
from scipy.stats import bernoulli

#Raw probability data given in the question

prob_def_a=0.6*0.7+0.4*0.7# Probability that the product was introduced by A
prob_def_b=0.4*0.3+0.6*0.3# Probability that the product was introduced by B

trials=int(1e7)
 #Calculating the bernoulli distributions for 10000000 trials with p being the probability of the product was introduced by A,or B.
product_a_dist=bernoulli.rvs(prob_def_a, size=trials)
product_b_dist=bernoulli.rvs(prob_def_b, size=trials)

#Here, since the Bernoulli distribution returns 1 for a succesful trial and 0 for an unsuccesful one, we can directly take the mean of the array elements
#.i.e number of successful trials divided by the total number of trials
exp_prob_def_a=np.mean(product_a_dist)
exp_prob_def_b=np.mean(product_b_dist)

#Taking these as our probability values and applying Bayes Theorem we get the probability of the product being introduced by B

final_exp_prob=exp_prob_def_b/(exp_prob_def_a+exp_prob_def_b)
final_theo_prob=prob_def_b/(prob_def_b+prob_def_a)
print("The experimentally obtained probability that the product was introduced by B is", final_exp_prob)
print("The theoretically determined probability that the product was introduced by B is ", final_theo_prob)
